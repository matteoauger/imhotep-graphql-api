# User type
# Represents a user
type User {
    id: ID!
    email: String!
    firstname: String!
    lastname: String!
    role: Role!
}

enum Role {
    ADMIN
    REAL_ESTATE
    USER
}

# User query type
type Query {
    # Queries the users with the given field values 
    # id unique id of the user (database stored id)
    # email email of the user
    # firstname firstname of the user
    # lastname lastname of the user
    # password password of the user
    # role role of the user 
    user(id: ID, email: String, firstname: String, lastname: String, role: Role): [User]
}

# User mutation
type Mutation {
    # Create a user
    # email email of the user
    # firstname firstname of the user
    # lastname lastname of the user
    # password password of the user
    # role role of the user
    insertUser(email: String!, firstname: String!, lastname: String!, password: String!, role: Role!): User

    # Update a user
    # id id of the user in DB
    # email email of the user
    # firstname firstname of the user
    # lastname lastname of the user
    # password password of the user
    # role role of the user
    updateUser(id: ID!, email: String, firstname: String, lastname: String, password: String, role: Role): User

    # Delete a user
    # id id of the user in DB
    deleteUser(id: ID!): Boolean
}

# User schema
schema {
    query: Query
    mutation: Mutation
}